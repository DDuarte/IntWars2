SendPacket(hero,packet)
BroadcastPacket(packet)

GetHash(spellName)
DoDash(hero,f1,f2,f3,4)
DoDash2(hero,fX,fY)
SendSpell(hero,name,a1,f1)
SetUnitPos(hero,fX,fY)
SendMissile(hero,CMissle)
SendMissile(hero,name,fX,fY)
SendMissile(hero,name,fX,fY,a15)



 module(L)[
        class_<CObject>("CObject")
        .property("netId", &CObject::GetNetworkID)
        .def_readwrite("index", &CObject::index)
        .def_readwrite("x", &CObject::x)
        .def_readwrite("y", &CObject::y),
        class_<CUnit, CObject>("CUnit")
        .property("name", &CUnit::GetName, &CUnit::SetName)
        .property("type", &CUnit::GetType, &CUnit::SetType)
        .property("model", &CUnit::GetModel, &CUnit::SetModel),
        class_<CHero, CUnit>("CHero")
        .property("isMorphed", &CHero::IsMorphed)
        .property("type", &CHero::GetType, &CHero::SetType)
        .property("model", &CHero::GetModel, &CHero::SetModel)
        .def("SetActionState", &CHero::SetActionState)
    ];
    module(L)[
        class_<CLoLPacket>("CLoLPacket")
        .def(constructor<BYTE>())
        .def("Block", &CLoLPacket::Block)
        .def("Hide", &CLoLPacket::Hide)
        .def("Encode1", &CLoLPacket::Encode1)
        .def("Encode2", &CLoLPacket::Encode2)
        .def("Encode4", &CLoLPacket::Encode4)
        .def("EncodeF", &CLoLPacket::EncodeF)
        .def("EncodeStr", &CLoLPacket::EncodeStrL)
        .def("Decode1", &CLoLPacket::Decode1)
        .def("Decode2", &CLoLPacket::Decode2)
        .def("Decode4", &CLoLPacket::Decode4)
        .def("DecodeF", &CLoLPacket::DecodeF)
        .def("DecodeStr", &CLoLPacket::DecodeStr)
        .def("Replace1", &CLoLPacket::Replace1)
        .def("Replace2", &CLoLPacket::Replace2)
        .def("Replace4", &CLoLPacket::Replace4)
        .def("ReplaceF", &CLoLPacket::ReplaceF)
        .def("skip", &CLoLPacket::skip)
        .def("getRemaining", &CLoLPacket::getRemaining)
        .def("setPos", &CLoLPacket::setPos)
        .property("header", &CLoLPacket::GetHeader)
        .def_readonly("bBlock", &CLoLPacket::bBlock)
        .def_readonly("size", &CLoLPacket::size)
        .def_readwrite("pos", &CLoLPacket::pos)
        .def_readwrite("channel", &CLoLPacket::dwArg1)
        .def_readwrite("flag", &CLoLPacket::dwArg2)
        .def_readwrite("pIndex", &CLoLPacket::dwPIndex),
        class_<CMissile>("CMissile")
        .def(constructor<const char *>())
        .def_readwrite("dwHash", &CMissile::dwHash)
        .def_readwrite("fromX", &CMissile::fromX)
        .def_readwrite("fromY", &CMissile::fromY)
        .def_readwrite("toX", &CMissile::toX)
        .def_readwrite("toY", &CMissile::toY)
        .def_readwrite("flag1", &CMissile::wFlag1)
        .def_readwrite("flag2", &CMissile::wFlag2)
        .def_readwrite("channelTime", &CMissile::fChannelTime)
        .def_readwrite("delay", &CMissile::fDelay)
        .def_readwrite("visible", &CMissile::fVisible)
        .def_readwrite("cooldown", &CMissile::fCooldown)
        .def_readwrite("mana", &CMissile::fMana)
    ];